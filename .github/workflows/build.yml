name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.19'
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Run go fmt check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "The following files are not formatted:"
          gofmt -s -l .
          exit 1
        fi

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.19'
    
    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        BINARY_NAME="perf-test-$GOOS-$GOARCH"
        go build -ldflags="-s -w" -o "dist/$BINARY_NAME" main.go
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: perf-test-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
    
    - name: Flatten artifacts
      run: |
        mkdir -p release
        find dist -name "perf-test-*" -exec cp {} release/ \;
        ls -la release/
    
    - name: Create checksums
      run: |
        cd release
        sha256sum * > checksums.txt
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          release/*
        body: |
          ## Performance Test Tool ${{ github.ref_name }}
          
          ### Downloads
          
          | Platform | Architecture | Download |
          |----------|--------------|----------|
          | Linux | AMD64 | [perf-test-linux-amd64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/perf-test-linux-amd64) |
          | Linux | ARM64 | [perf-test-linux-arm64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/perf-test-linux-arm64) |
          | macOS | AMD64 | [perf-test-darwin-amd64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/perf-test-darwin-amd64) |
          | macOS | ARM64 | [perf-test-darwin-arm64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/perf-test-darwin-arm64) |
          
          ### Installation
          
          1. Download the appropriate binary for your platform
          2. Make it executable (Linux/macOS): `chmod +x perf-test-*`
          3. Run: `./perf-test-*` or `perf-test-*.exe`
          
          ### Verification
          
          Verify the integrity of downloaded files using the checksums:
          ```bash
          sha256sum -c checksums.txt
          ```
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}